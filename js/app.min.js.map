{"version":3,"file":"app.min.js","sources":["../node_modules/almond/almond.js","vendors/underscore.js","vendors/jquery.js","vendors/backbone.js","vendors/text.js","tpl/header.html!text","tpl/content.html!text","tpl/footer.html!text","views/mainView.js","tpl/list.html!text","views/listView.js","tpl/detail.html!text","views/detailView.js","router.js","vendors/mediator.js","helper.js","events/resize.js","events/scroll.js","app.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","createReduce","dir","iterator","iteratee","memo","keys","currentKey","context","optimizeCb","isArrayLike","_","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","Math","max","min","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","has","contains","root","this","previousUnderscore","ArrayProto","Array","FuncProto","Function","toString","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","invoke","method","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","string","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","factory","$","Backbone","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","Events","on","eventsApi","_events","events","ctx","off","_callback","retain","ev","k","trigger","allEvents","triggerEvents","stopListening","listeningTo","_listeningTo","remove","_listenId","eventSplitter","action","a1","a2","a3","listenMethods","listenTo","listenToOnce","implementation","unbind","Model","attributes","cid","parse","changed","initialize","validationError","idAttribute","sync","get","attr","val","unset","changes","silent","changing","prev","current","_validate","_changing","_previousAttributes","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","model","success","resp","wrapError","save","xhr","validate","serverAttrs","isNew","patch","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","unshift","Collection","models","comparator","_reset","reset","setOptions","add","merge","addOptions","singular","_byId","_removeReference","existing","at","targetModel","sortable","sortAttr","toAdd","toRemove","modelMap","order","_prepareModel","_addReference","orderedModels","previousModels","shift","_onModelEvent","event","attributeMethods","View","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","tagName","selector","$el","setElement","element","delegate","undelegateEvents","el","eventName","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","noXhrPatch","ActiveXObject","ajax","window","XMLHttpRequest","dispatchEvent","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","exec","param","decodeURIComponent","History","location","routeStripper","rootStripper","isExplorer","trailingSlash","pathStripper","started","interval","atRoot","pathname","getHash","href","getFragment","forcePushState","_hasPushState","_wantsHashChange","decodeURI","search","hashChange","_wantsPushState","pushState","docMode","document","documentMode","oldIE","navigator","userAgent","toLowerCase","frame","iframe","hide","appendTo","contentWindow","checkUrl","_checkUrlInterval","setInterval","loc","hash","replaceState","title","loadUrl","clearInterval","handler","_updateHash","open","close","protoProps","staticProps","child","parent","Surrogate","__super__","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","defaultProtocol","protocol","defaultHostName","hostname","defaultPort","port","buildMap","masterConfig","version","strip","content","jsEscape","createXhr","progId","parseName","modName","ext","temp","isRelative","moduleName","xdRegExp","useXhr","uProtocol","uHostName","uPort","finishLoad","onLoad","isBuild","inlineText","parsed","nonStripName","toUrl","err","write","pluginName","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","node","nodeRequire","errback","file","readFileSync","headers","header","onXhr","onreadystatechange","status","readyState","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","append","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","headerTpl","contentTpl","footerTpl","App","mediator","subscribe","onScroll","onResize","link","modified","footer","html","listTpl","listData","rendered","show","detailTpl","MainView","ListView","DetailView","item/:idx","mainView","listView","items","detailView","parseInt","global","Mediator","guidGenerator","S4","Subscriber","fn","channel","Channel","namespace","_subscribers","_channels","_parent","stopped","priority","setPriority","addSubscriber","subscriber","stopPropagation","getSubscriber","identifier","x","y","sub","firstHalf","lastHalf","oldIndex","addChannel","hasChannel","returnChannel","removeSubscriber","publish","subsBefore","subsAfter","shouldCall","calls","getChannel","readOnly","namespaceHierarchy","channelName","emit","getCleanAuthorName","flickrAuthor","getFormattedDate","date","mthNames","hours12","ampm","getHours","day","getDay","month","getMonth","year","getFullYear","minutes","getMinutes","formattedDate","Event","$win","width","height","$body","scrollLeft","scrollTop","helper","local","feed","jsonp","published","author"],"mappings":"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","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../node_modules/almond/almond\", function(){});\n\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n","define('jquery',[],function () {\n  return jQuery;\n});\n","//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.2';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = void 0;\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model, options);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i] || {};\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute || 'id'];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);\n        modelMap[model.id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) return attrs;\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      if (model.id != null) this._byId[model.id] = model;\n      if (!model.collection) model.collection = this;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch =\n    typeof window !== 'undefined' && !!window.ActiveXObject &&\n      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        router.execute(callback, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = decodeURI(this.location.pathname + this.location.search);\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        var frame = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\">');\n        this.iframe = frame.hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot() && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n\n","/**\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.12',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!tpl/header.html',[],function () { return '<div id=\"header\">\\n    <h1>\\n        <a href=\"#\"><%= title %></a>\\n    </h1>\\n\\n    Last modified: <span class=\"modified\"><%= modified %></span>\\n</div>\\n\\n';});\n\n","\ndefine('text!tpl/content.html',[],function () { return '<div id=\"content\">\\n\\n    <div id=\"detail\"></div>\\n    <div id=\"list\"></div>\\n\\n</div>';});\n\n","\ndefine('text!tpl/footer.html',[],function () { return '<div id=\"footer\">\\n    Code by <a href=\"http://www.estebanalmiron.com/\">@taseenb</a> - Content by <a href=\"https://p.ota.to/\">Potato</a>\\n</div>\\n';});\n\n","define('views/mainView',['require','underscore','backbone','text!tpl/header.html','text!tpl/content.html','text!tpl/footer.html'],function(require) {\n\n  'use strict';\n\n  var _ = require('underscore');\n  var Backbone = require('backbone');\n\n  var headerTpl = require('text!tpl/header.html');\n  var contentTpl = require('text!tpl/content.html');\n  var footerTpl = require('text!tpl/footer.html');\n\n  return Backbone.View.extend({\n\n    el: '#main',\n\n    initialize: function() {\n      App.mediator.subscribe('scroll', this.onScroll.bind(this));\n      App.mediator.subscribe('resize', this.onResize.bind(this));\n    },\n\n    render: function() {\n      var header = _.template(headerTpl)({\n        title: App.data.title,\n        link: App.data.link,\n        modified: App.data.modified\n      });\n      var content = _.template(contentTpl)();\n      var footer = _.template(footerTpl)();\n\n      var html = header + content + footer;\n      this.$el.html(html);\n    },\n\n    onScroll: function(e) {\n//      console.log(e);\n    },\n\n    onResize: function(e) {\n//      console.log(e);\n    }\n\n  });\n\n});\n","\ndefine('text!tpl/list.html',[],function () { return '<% _.each(list, function(el, idx, list){ %>\\n\\n<div class=\"clear\"></div>\\n\\n<div class=\"item\">\\n    <a class=\"link-detail img\" href=\"#item/<%= idx %>\">\\n        <span class=\"img-wrapper\" style=\"background-image: url(<%= el.media.m %>);\"></span>\\n    </a>\\n\\n    <div class=\"details\">\\n        <a class=\"link-detail title\" href=\"#item/<%= idx %>\"><%= el.title %></a>\\n\\n        <div class=\"metadata\">\\n            <a class=\"author\" href=\"https://www.flickr.com/people/<%= el.author_id %>\"><%= el.author %></a>\\n            <span class=\"published\">Published: <%= el.published %></span>\\n            <a class=\"link-flickr\" href=\"<%= el.link %>\">View on Flickr</a>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<% }); %>\\n';});\n\n","define('views/listView',['require','underscore','backbone','text!tpl/list.html'],function(require) {\n\n  'use strict';\n\n  var _ = require('underscore');\n  var Backbone = require('backbone');\n\n  var listTpl = require('text!tpl/list.html');\n\n  return Backbone.View.extend({\n\n    el: '#list',\n\n    initialize: function(data) {\n      App.mediator.subscribe('scroll', this.onScroll.bind(this));\n      App.mediator.subscribe('resize', this.onResize.bind(this));\n      this.listData = data;\n\n      return this;\n    },\n\n    render: function() {\n      if (!this.rendered) {\n        var html = _.template(listTpl)({\n          list: this.listData\n        });\n        this.$el.html(html);\n        this.rendered = true;\n      }\n\n      return this;\n    },\n\n    show: function() {\n      this.$el.show();\n\n      return this;\n    },\n\n    hide: function() {\n      this.$el.hide();\n\n      return this;\n    },\n\n    onScroll: function(e) {\n//      console.log(e);\n    },\n\n    onResize: function(e) {\n//      console.log(e);\n    }\n\n  });\n\n});\n","\ndefine('text!tpl/detail.html',[],function () { return '<div class=\"inner\">\\n\\n    <div class=\"header\">\\n        <h1 class=\"title\"><a href=\"<%= link %>\"><%= title %></a></h1>\\n\\n        <a class=\"back\" href=\"#\">\\n            <span class=\"back-inner\">Back</span>\\n        </a>\\n\\n        <div class=\"subtitle\">\\n            <span class=\"author\">\\n                <a href=\"https://www.flickr.com/people/<%= author_id %>\"><%= author %></a>\\n            </span>\\n\\n            <span class=\"separator\">|</span>\\n\\n            <span class=\"published\">\\n                Published: <span><%= published %></span>\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div class=\"content\">\\n        <div class=\"img\">\\n            <a href=\"<%= link %>\"><img src=\"<%= media.m %>\"></a>\\n        </div>\\n\\n        <div class=\"description\"><%= description %></div>\\n    </div>\\n\\n    <div class=\"footer\">\\n        <div class=\"tags\">\\n            Tags:\\n            <% _.each(tags.split(\\' \\'), function(el, idx) { %>\\n            <a href=\"https://www.flickr.com/photos/tags/<%= el %>/\"><%= el %></a>\\n            <% }); %>\\n        </div>\\n    </div>\\n\\n</div>';});\n\n","define('views/detailView',['require','underscore','backbone','text!tpl/detail.html'],function (require) {\n\n  'use strict';\n\n  var _ = require('underscore');\n  var Backbone = require('backbone');\n\n  var detailTpl = require('text!tpl/detail.html');\n\n  return Backbone.View.extend({\n\n    el: '#detail',\n\n    initialize: function () {\n      App.mediator.subscribe('scroll', this.onScroll.bind(this));\n      App.mediator.subscribe('resize', this.onResize.bind(this));\n\n      return this;\n    },\n\n    render: function (data) {\n      var html = _.template(detailTpl)(data);\n      this.$el.hide().html(html);\n\n      // Clean description: only keep the 3rd p element\n      this.$('.description p:lt(2)').remove();\n\n      this.$el.show();\n\n      return this;\n    },\n\n    show: function () {\n      this.$el.show();\n\n      return this;\n    },\n\n    hide: function () {\n      this.$el.hide();\n\n      return this;\n    },\n\n    onScroll: function (e) {\n//      console.log(e);\n    },\n\n    onResize: function (e) {\n//      console.log(e);\n    }\n\n  });\n\n});\n","define('router',['require','backbone','views/mainView','views/listView','views/detailView'],function (require) {\n\n  'use strict';\n\n//  var _ = require('underscore');\n  var Backbone = require('backbone');\n\n  // Views\n  var MainView = require('views/mainView');\n  var ListView = require('views/listView');\n  var DetailView = require('views/detailView');\n\n  return Backbone.Router.extend({\n\n    routes: {\n      '': 'list',\n      'item/:idx': 'item'\n    },\n\n    initialize: function () {\n      var mainView = new MainView();\n      mainView.render();\n    },\n\n    list: function () {\n      if (!App.listView) {\n        App.listView = new ListView(App.data.items);\n      }\n\n      if (App.detailView) {\n        App.detailView.hide();\n      }\n\n      App.listView.render().show();\n    },\n\n    item: function (idx) {\n      var index = parseInt(idx);\n\n      if (index < 0 || index > App.data.items.length - 1) {\n        return;\n      } else {\n        var data = App.data.items[index];\n        if (!App.detailView) {\n          App.detailView = new DetailView();\n        }\n\n        if (App.listView) {\n          App.listView.hide();\n        }\n\n        App.detailView.render(data).show();\n      }\n    }\n\n  });\n\n});\n","/*jslint bitwise: true, nomen: true, plusplus: true, white: true */\n\n/*!\n* Mediator.js Library v0.9.8\n* https://github.com/ajacksified/Mediator.js\n*\n* Copyright 2013, Jack Lawson\n* MIT Licensed (http://www.opensource.org/licenses/mit-license.php)\n*\n* For more information: http://thejacklawson.com/2011/06/mediators-for-modularized-asynchronous-programming-in-javascript/index.html\n* Project on GitHub: https://github.com/ajacksified/Mediator.js\n*\n* Last update: October 19 2013\n*/\n\n(function(global, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define('mediator-js', [], function() {\n      global.Mediator = factory();\n      return global.Mediator;\n    });\n  } else if (typeof exports !== 'undefined') {\n    // Node/CommonJS\n    exports.Mediator = factory();\n  } else {\n    // Browser global\n    global.Mediator = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  // We'll generate guids for class instances for easy referencing later on.\n  // Subscriber instances will have an id that can be refernced for quick\n  // lookups.\n\n  function guidGenerator() {\n    var S4 = function() {\n       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    };\n\n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n  }\n\n  // Subscribers are instances of Mediator Channel registrations. We generate\n  // an object instance so that it can be updated later on without having to\n  // unregister and re-register. Subscribers are constructed with a function\n  // to be called, options object, and context.\n\n  function Subscriber(fn, options, context) {\n    if (!(this instanceof Subscriber)) {\n      return new Subscriber(fn, options, context);\n    }\n\n    this.id = guidGenerator();\n    this.fn = fn;\n    this.options = options;\n    this.context = context;\n    this.channel = null;\n  }\n\n  // Mediator.update on a subscriber instance can update its function,context,\n  // or options object. It takes in an object and looks for fn, context, or\n  // options keys.\n  Subscriber.prototype.update = function(options) {\n    if (options) {\n      this.fn = options.fn || this.fn;\n      this.context = options.context || this.context;\n      this.options = options.options || this.options;\n      if (this.channel && this.options && this.options.priority !== undefined) {\n          this.channel.setPriority(this.id, this.options.priority);\n      }\n    }\n  }\n\n\n  function Channel(namespace, parent) {\n    if (!(this instanceof Channel)) {\n      return new Channel(namespace);\n    }\n\n    this.namespace = namespace || \"\";\n    this._subscribers = [];\n    this._channels = {};\n    this._parent = parent;\n    this.stopped = false;\n  }\n\n  // A Mediator channel holds a list of sub-channels and subscribers to be fired\n  // when Mediator.publish is called on the Mediator instance. It also contains\n  // some methods to manipulate its lists of data; only setPriority and\n  // StopPropagation are meant to be used. The other methods should be accessed\n  // through the Mediator instance.\n  Channel.prototype.addSubscriber = function(fn, options, context) {\n    var subscriber = new Subscriber(fn, options, context);\n\n    if (options && options.priority !== undefined) {\n      // Cheap hack to either parse as an int or turn it into 0. Runs faster\n      // in many browsers than parseInt with the benefit that it won't\n      // return a NaN.\n      options.priority = options.priority >> 0;\n\n      if (options.priority < 0) { options.priority = 0; }\n      if (options.priority >= this._subscribers.length) { options.priority = this._subscribers.length-1; }\n\n      this._subscribers.splice(options.priority, 0, subscriber);\n    }else{\n      this._subscribers.push(subscriber);\n    }\n\n    subscriber.channel = this;\n\n    return subscriber;\n  }\n\n  // The channel instance is passed as an argument to the mediator subscriber,\n  // and further subscriber propagation can be called with\n  // channel.StopPropagation().\n  Channel.prototype.stopPropagation = function() {\n    this.stopped = true;\n  }\n\n  Channel.prototype.getSubscriber = function(identifier) {\n    var x = 0,\n        y = this._subscribers.length;\n\n    for(x, y; x < y; x++) {\n      if (this._subscribers[x].id === identifier || this._subscribers[x].fn === identifier) {\n        return this._subscribers[x];\n      }\n    }\n  }\n\n  // Channel.setPriority is useful in updating the order in which Subscribers\n  // are called, and takes an identifier (subscriber id or named function) and\n  // an array index. It will not search recursively through subchannels.\n\n  Channel.prototype.setPriority = function(identifier, priority) {\n    var oldIndex = 0,\n        x = 0,\n        sub, firstHalf, lastHalf, y;\n\n    for(x = 0, y = this._subscribers.length; x < y; x++) {\n      if (this._subscribers[x].id === identifier || this._subscribers[x].fn === identifier) {\n        break;\n      }\n      oldIndex ++;\n    }\n\n    sub = this._subscribers[oldIndex];\n    firstHalf = this._subscribers.slice(0, oldIndex);\n    lastHalf = this._subscribers.slice(oldIndex+1);\n\n    this._subscribers = firstHalf.concat(lastHalf);\n    this._subscribers.splice(priority, 0, sub);\n  }\n\n  Channel.prototype.addChannel = function(channel) {\n    this._channels[channel] = new Channel((this.namespace ? this.namespace + ':' : '') + channel, this);\n  }\n\n  Channel.prototype.hasChannel = function(channel) {\n    return this._channels.hasOwnProperty(channel);\n  }\n\n  Channel.prototype.returnChannel = function(channel) {\n    return this._channels[channel];\n  }\n\n  Channel.prototype.removeSubscriber = function(identifier) {\n    var x = this._subscribers.length - 1;\n\n    // If we don't pass in an id, we're clearing all\n    if (!identifier) {\n      this._subscribers = [];\n      return;\n    }\n\n    // Going backwards makes splicing a whole lot easier.\n    for(x; x >= 0; x--) {\n      if (this._subscribers[x].fn === identifier || this._subscribers[x].id === identifier) {\n        this._subscribers[x].channel = null;\n        this._subscribers.splice(x,1);\n      }\n    }\n  }\n\n    // This will publish arbitrary arguments to a subscriber and then to parent\n    // channels.\n\n  Channel.prototype.publish = function(data) {\n    var x = 0,\n        y = this._subscribers.length,\n        shouldCall = false,\n        subscriber, l,\n        subsBefore,subsAfter;\n\n    // Priority is preserved in the _subscribers index.\n    for(x, y; x < y; x++) {\n      // By default set the flag to false\n      shouldCall = false;\n      subscriber = this._subscribers[x];\n\n      if (!this.stopped) {\n        subsBefore = this._subscribers.length;\n        if (subscriber.options !== undefined && typeof subscriber.options.predicate === \"function\") {\n          if (subscriber.options.predicate.apply(subscriber.context, data)) {\n            // The predicate matches, the callback function should be called\n            shouldCall = true;\n          }\n        }else{\n          // There is no predicate to match, the callback should always be called\n          shouldCall = true;\n        }\n      }\n\n      // Check if the callback should be called\n      if (shouldCall) {\n        // Check if the subscriber has options and if this include the calls options\n        if (subscriber.options && subscriber.options.calls !== undefined) {\n          // Decrease the number of calls left by one\n          subscriber.options.calls--;\n          // Once the number of calls left reaches zero or less we need to remove the subscriber\n          if (subscriber.options.calls < 1) {\n            this.removeSubscriber(subscriber.id);\n          }\n        }\n        // Now we call the callback, if this in turns publishes to the same channel it will no longer\n        // cause the callback to be called as we just removed it as a subscriber\n        subscriber.fn.apply(subscriber.context, data);\n\n        subsAfter = this._subscribers.length;\n        y = subsAfter;\n        if (subsAfter === subsBefore - 1) {\n          x--;\n        }\n      }\n    }\n\n    if (this._parent) {\n      this._parent.publish(data);\n    }\n\n    this.stopped = false;\n  }\n\n  function Mediator() {\n    if (!(this instanceof Mediator)) {\n      return new Mediator();\n    }\n\n    this._channels = new Channel('');\n  }\n\n  // A Mediator instance is the interface through which events are registered\n  // and removed from publish channels.\n\n  // Returns a channel instance based on namespace, for example\n  // application:chat:message:received. If readOnly is true we\n  // will refrain from creating non existing channels.\n  Mediator.prototype.getChannel = function(namespace, readOnly) {\n    var channel = this._channels,\n        namespaceHierarchy = namespace.split(':'),\n        x = 0,\n        y = namespaceHierarchy.length;\n\n    if (namespace === '') {\n      return channel;\n    }\n\n    if (namespaceHierarchy.length > 0) {\n      for(x, y; x < y; x++) {\n\n        if (!channel.hasChannel(namespaceHierarchy[x])) {\n          if (readOnly) {\n            break;\n          } else {\n            channel.addChannel(namespaceHierarchy[x]);\n          }\n        }\n\n        channel = channel.returnChannel(namespaceHierarchy[x]);\n      }\n    }\n\n    return channel;\n  }\n\n  // Pass in a channel namespace, function to be called, options, and context\n  // to call the function in to Subscribe. It will create a channel if one\n  // does not exist. Options can include a predicate to determine if it\n  // should be called (based on the data published to it) and a priority\n  // index.\n\n  Mediator.prototype.subscribe = function(channelName, fn, options, context) {\n    var channel = this.getChannel(channelName || \"\", false);\n\n    options = options || {};\n    context = context || {};\n\n    return channel.addSubscriber(fn, options, context);\n  }\n\n  // Pass in a channel namespace, function to be called, options, and context\n  // to call the function in to Subscribe. It will create a channel if one\n  // does not exist. Options can include a predicate to determine if it\n  // should be called (based on the data published to it) and a priority\n  // index.\n\n  Mediator.prototype.once = function(channelName, fn, options, context) {\n    options = options || {};\n    options.calls = 1;\n\n    return this.subscribe(channelName, fn, options, context);\n  }\n\n  // Returns a subscriber for a given subscriber id / named function and\n  // channel namespace\n\n  Mediator.prototype.getSubscriber = function(identifier, channelName) {\n    var channel = this.getChannel(channelName || \"\", true);\n    // We have to check if channel within the hierarchy exists and if it is\n    // an exact match for the requested channel\n    if (channel.namespace !== channelName) {\n      return null;\n    }\n\n    return channel.getSubscriber(identifier);\n  }\n\n  // Remove a subscriber from a given channel namespace recursively based on\n  // a passed-in subscriber id or named function.\n\n  Mediator.prototype.remove = function(channelName, identifier) {\n    var channel = this.getChannel(channelName || \"\", true);\n    if (channel.namespace !== channelName) {\n      return false;\n    }\n\n    channel.removeSubscriber(identifier);\n  }\n\n  // Publishes arbitrary data to a given channel namespace. Channels are\n  // called recursively downwards; a post to application:chat will post to\n  // application:chat:receive and application:chat:derp:test:beta:bananas.\n  // Called using Mediator.publish(\"application:chat\", [ args ]);\n\n  Mediator.prototype.publish = function(channelName) {\n    var channel = this.getChannel(channelName || \"\", true);\n    if (channel.namespace !== channelName) {\n      return null;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    args.push(channel);\n\n    channel.publish(args);\n  }\n\n  // Alias some common names for easy interop\n  Mediator.prototype.on = Mediator.prototype.subscribe;\n  Mediator.prototype.bind = Mediator.prototype.subscribe;\n  Mediator.prototype.emit = Mediator.prototype.publish;\n  Mediator.prototype.trigger = Mediator.prototype.publish;\n  Mediator.prototype.off = Mediator.prototype.remove;\n\n  // Finally, expose it all.\n\n  Mediator.Channel = Channel;\n  Mediator.Subscriber = Subscriber;\n  Mediator.version = \"0.9.8\";\n\n  return Mediator;\n}));\n\n","define('helper',['require'],function (require) {\n\n  return {\n\n    getCleanAuthorName: function(flickrAuthor) {\n      var name = '';\n      name = flickrAuthor.replace(/^(nobody@flickr.com\\ \\()/, '');\n      name = name.slice(0, - 1);\n      return name;\n    },\n\n    /**\n     * Format a js date into English format and return a string.\n     * @param date Date object.\n     * @returns {string}\n     */\n    getFormattedDate: function (date) {\n\n      // Month names\n      var mthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n      // 12-hour clock\n      var hours12 = '';\n      var ampm = '';\n      if (date.getHours() / 12 < 1) {\n        // am\n        hours12 = date.getHours();\n        ampm = 'am';\n      } else {\n        hours12 = date.getHours();\n        ampm = 'pm';\n      }\n\n      var day = date.getDay();\n      var month = mthNames[(date.getMonth() + 1)];\n      var year = date.getFullYear();\n      var minutes = date.getMinutes();\n\n      var formattedDate = day + ' ' + month + ' ' + year + ' at ' + hours12 + ':' + minutes + ampm;\n\n      return formattedDate;\n    }\n\n\n  };\n\n});\n","define('resize',['require','underscore'],function(require){\n\n  var _ = require('underscore');\n\n  var Event = function() {\n    this.initialize();\n  };\n\n  Event.prototype = {\n    initialize: function() {\n      this.$win = $(window);\n      this.callback = _.debounce(this.onResize, 250).bind(this);\n\n      this.$win.on('resize', this.callback);\n    },\n    onResize: function() {\n      App.mediator.publish('resize', {\n        width: this.$win.width(),\n        height: this.$win.height()\n      });\n    }\n  };\n\n  return new Event();\n\n});\n","define('scroll',['require','underscore'],function(require){\n\n  var _ = require('underscore');\n\n  var Event = function() {\n    this.initialize();\n  };\n\n  Event.prototype = {\n    initialize: function() {\n      this.$body = $('body');\n      this.callback = _.throttle(this.onScroll, 100).bind(this);\n\n      $(window).on('scroll', this.callback);\n    },\n    onScroll: function() {\n      App.mediator.publish('scroll', {\n        scrollLeft: this.$body.scrollLeft(),\n        scrollTop: this.$body.scrollTop()\n      });\n    }\n  };\n\n  return new Event();\n\n});\n","define('app',['require','underscore','backbone','router','mediator-js','helper','resize','scroll'],function (require) {\n\n  'use strict';\n\n  var _ = require('underscore');\n  var Backbone = require('backbone');\n  var Router = require('router');\n  var Mediator = require('mediator-js');\n\n  var helper = require('helper');\n\n  var local = false;\n  var feed = local ? 'data/photos_public.json' : 'https://api.flickr.com/services/feeds/photos_public.gne?tags=potato&tagmode=all&format=json';\n\n  // Create App global\n  window.App = window.App || {};\n\n  // Global Events - pub/sub\n  App.mediator = new Mediator();\n  require('resize');\n  require('scroll');\n\n  // Get data, prepare data and start router\n  $.ajax({\n    url: feed,\n    dataType: local ? undefined : 'jsonp',\n    jsonp: local ? undefined : 'jsoncallback',\n    success: function (data) {\n      App.data = data;\n\n      // Prepare data\n      _.each(App.data.items, function (el, idx) {\n        // Format all dates\n        var date = new Date(el.published);\n        el.published = helper.getFormattedDate(date); //'14th Apr 2015 at 12:45'\n        // Clean author names\n        el.author = helper.getCleanAuthorName(el.author);\n      });\n\n      // Start router\n      App.router = new Router();\n      Backbone.history.start();\n    }\n  });\n\n\n});\n"]}